generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id          BigInt  @id @default(autoincrement())
  name        String  @unique
  description String?

  users User[]
}

model User {
  id        BigInt   @id @default(autoincrement())
  username  String   @unique
  password  String
  name      String
  email     String   @unique
  createdAt DateTime @default(now())

  roleId BigInt?
  role   Role?   @relation(fields: [roleId], references: [id])
}

// -------------------
model Product {
  id            Int            @id @default(autoincrement())
  name          String
  barCode       String?        @unique
  productType   ProductType    @relation(fields: [productTypeId], references: [id])
  productTypeId Int
  presentations Presentation[]
  inventories   Inventory[]
  transactions  Transaction[]
}

model ProductType {
  id       Int       @id @default(autoincrement())
  name     String // e.g., "by weight", "by unit", "split pack"
  products Product[]
}

model Presentation {
  id           Int     @id @default(autoincrement())
  product      Product @relation(fields: [productId], references: [id])
  productId    Int
  description  String // e.g., "Box x24", "Unit", "Pack x4"
  baseQuantity Int // How many base units this presentation includes
  price        Float
  unitLabel    String // "unit", "kg", "pack"
  qrCode       String? @unique
}

model Inventory {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int // Stored in base units
}

model Transaction {
  id             Int             @id @default(autoincrement())
  product        Product         @relation(fields: [productId], references: [id])
  productId      Int
  type           TransactionType
  quantity       Int
  presentationId Int?
  date           DateTime        @default(now())
}

enum TransactionType {
  SALE
  WASTE
  ADJUSTMENT
  ENTRY
}
