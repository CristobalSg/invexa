generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id          BigInt     @id @default(autoincrement())
  name        String     @unique
  description String?

  users       User[]
}

model User {
  id        BigInt     @id @default(autoincrement())
  username  String     @unique
  password  String
  name      String
  email     String     @unique
  createdAt DateTime   @default(now())

  roleId    BigInt?
  role      Role?      @relation(fields: [roleId], references: [id])

  warehousesManaged Warehouse[] @relation("Manager")
  movements         Movement[]
}

model Warehouse {
  id        BigInt     @id @default(autoincrement())
  name      String
  location  String?

  managerId BigInt?
  manager   User?      @relation("Manager", fields: [managerId], references: [id])

  inventory Inventory[]
  movements Movement[]
}

model Product {
  id          BigInt     @id @default(autoincrement())
  name        String
  description String?
  barcode     String?    @unique
  createdAt   DateTime   @default(now())

  inventory   Inventory[]
  movements   Movement[]
}

model Inventory {
  id           BigInt     @id @default(autoincrement())
  productId    BigInt
  warehouseId  BigInt
  quantity     Int        @default(0)
  lastUpdated  DateTime   @default(now())

  product      Product    @relation(fields: [productId], references: [id])
  warehouse    Warehouse  @relation(fields: [warehouseId], references: [id])
}

model Movement {
  id          BigInt     @id @default(autoincrement())
  productId   BigInt
  warehouseId BigInt
  userId      BigInt
  type        MovementType
  quantity    Int
  createdAt   DateTime   @default(now())

  product     Product    @relation(fields: [productId], references: [id])
  warehouse   Warehouse  @relation(fields: [warehouseId], references: [id])
  user        User       @relation(fields: [userId], references: [id])
}

enum MovementType {
  IN
  OUT
  ADJUST
}
